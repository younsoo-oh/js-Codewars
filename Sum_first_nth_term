Your task is to write a function which returns 
the sum of following series upto nth term(parameter).

Series: 1 + 1/4 + 1/7 + 1/10 + 1/13 + 1/16 +...

Rules:
You need to round the answer to 2 decimal places and return it as String.
If the given value is 0 then it should return 0.00
You will only be given Natural Numbers as arguments.

Examples:
SeriesSum(1) => 1 = "1.00"
SeriesSum(2) => 1 + 1/4 = "1.25"
SeriesSum(5) => 1 + 1/4 + 1/7 + 1/10 + 1/13 = "1.57"


My code
function SeriesSum(n)
{
  const arr = [];
  for (let i=0; i<=n-1; i++){
    arr.push(1/(3*i+1))
  }
  return arr.reduce((a,b)=> a+b,0).toFixed(2)
}



other code
function SeriesSum(n) {
  var sum = 0;
  for(var i = 0; i < n; i++) {
    sum += 1 / (3 * i + 1);
  }
  return sum.toFixed(2);
}

toFixed함수는 인자에 소수점 반올림을 지정해주고 문자열로 반환한다.
Math.round함수는 숫자로 반환한다. (소수점 반올림은 따로지정해야함)