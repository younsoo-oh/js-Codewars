Given an array of integers, find the one that appears an odd number of times.

There will always be only one integer that appears an odd number of times.

ex)
[20,1,-1,2,-2,3,3,5,5,1,2,4,20,4,-1,-2,5] //return 5
[1,1,2,-2,5,2,4,4,-1,-2,5] //return -1
[1,1,1,1,1,1,10,1,1,1,1] //return 10
[5,4,3,2,1,5,4,3,2,10,10] //return 1



My code
function findOdd(A) {
  const find = A.reduce((prev,curr) => {
    if(curr in prev){
      prev[curr]++
    }
    else {
      prev[curr] = 1
    }
    return prev
  },{})
  for(let values in find){
    if(values % 2 === 1){
      return find[values]
    }
  }

}


console.log(findOdd([20,1,-1,2,-2,3,3,5,5,1,2,4,20,4,-1,-2,5]))

//{1: 2, 2: 2, 3: 2, 4: 2, 5: 3â€¦}

/*
 const objVal = Object.values(find)
  for(let i=0; i<=objVal.length; i++){
    if(objVal[i] % 2 === 1){
      return objVal[i]
    }
  
  }*/ 